% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/popGrid.R
\name{generatePixelGrid}
\alias{generatePixelGrid}
\alias{setThresholdsArea}
\alias{setThresholdsSubarea}
\alias{makeInterpPopMat}
\alias{adjustPopMat}
\alias{poppRegionFromPopMat}
\title{Functions for pixellated population and urbanicity grids}
\usage{
generatePixelGrid(kmRes = 5, domainPoly, eastLim, northLim, mapProjection)

setThresholdsArea(popMat, poppa)

setThresholdsSubarea(popMat, poppsub)

makeInterpPopMat(
  pop,
  pixelGrid,
  areas,
  subareas,
  poppa,
  poppsub = NULL,
  stratifyByUrban = TRUE
)

adjustPopMat(popMat, poppaTarget = NULL, adjustBy = c("area", "subarea"))

poppRegionFromPopMat(popMat, regions)
}
\arguments{
\item{kmRes}{the resolution of the pixelated grid in km}

\item{domainPoly}{a polygon representing the full spatial domain (e.g. country)}

\item{eastLim}{range in km easting over the spatial domain under the input projection}

\item{northLim}{range in km northing over the spatial domain under the input projection}

\item{mapProjection}{a projection function taking longitude and latitude and returning easting and 
northing in km. Or the inverse if inverse is set to TRUE. For example, 
\code{\link{projKenya}}}

\item{popMat}{pixellated grid data frame with variables `area` and `pop`}

\item{poppa}{data.frame of population per area separated by urban/rural with variables:
\describe{
  \item{area}{name of area}
  \item{popUrb}{total urban (general) population of area}
  \item{popRur}{total rural (general) population of area}
  \item{popTotal}{total (general) population of area}
  \item{pctUrb}{percentage of population in the area that is urban (between 0 and 100)}
}}

\item{poppsub}{data.frame of population per subarea separated by 
urban/rural using for population density grid normalization or urbanicity 
classification. Often based on extra fine scale population density grid. Has variables:
\describe{
  \item{subarea}{name of subarea}
  \item{area}{name of area}
  \item{popUrb}{total urban (general) population of subarea}
  \item{popRur}{total rural (general) population of subarea}
  \item{popTotal}{total (general) population of subarea}
  \item{pctUrb}{percentage of population in the subarea that is urban (between 0 and 100)}
}}

\item{pop}{population density raster}

\item{pixelGrid}{a pixel grid data.frame such as that created by \code{\link{generatePixelGrid}}}

\item{areas}{character vector of length nPixels giving area names associated with each pixel}

\item{subareas}{character vector of length nPixels giving subarea names associated with each pixel}

\item{stratifyByUrban}{Whether to stratify the pixellated grid by urban/rural. If TRUE, sets 
threshold on population density when classifying urban/rural for each 
area to obtain urbanicity classification based on proportion urban 
population for that area}

\item{poppaTarget}{target population per area stratified by urban rural. Same format as poppa}

\item{adjustBy}{whether to adjust population density by the `area` or `subarea` level}

\item{regions}{character vector of length nPixels giving a custom set of regions for which to generate 
a population frame using population density}
}
\description{
Generate pixellated grid of coordinates (both longitude/latitude and east/north) 
over spatial domain of the given resolution
}
\section{Functions}{
\itemize{
\item \code{setThresholdsArea}: Set thresholds of population density for urbanicity classifications within each area 
based on that area's percent population urban. Intended as a helper function of \code{\link{makeInterpPopMat}}

\item \code{setThresholdsSubarea}: Set thresholds of population density for urbanicity classifications within each subarea 
based on that subarea's percent population urban. Intended as a helper function of \code{\link{makeInterpPopMat}}

\item \code{makeInterpPopMat}: Generate the population density surface along with urbanicity classifications

\item \code{adjustPopMat}: adjust population densities in grid based on population frame

\item \code{poppRegionFromPopMat}: Generate a population frame of a similar format to poppa argument of \code{\link{simPopPixel}} with a custom set of regions
}}

\examples{
\dontrun{
# create 5km pixellated grid over Kenya
data(kenyaMaps)
eastLim = c(-110.6405, 832.4544)
northLim = c(-555.1739, 608.7130)
pixelGrid = generatePixelGrid(kmRes=5, kenyaPoly, eastLim, northLim, 
  mapProjection=projKenya)

# add population density to the grid, assign urbanicity by thresholding 
# population density based on estimated proportion population urban/rural. 
# Note that popKenya is some general population density raster object for Kenya
data(kenyaPopulationData)
require(raster)
popMat = makeInterpPopMat(popKenya, pixelGrid, 
  areas=popMatKenya$area, subareas=popMatKenya$subarea, 
  poppa=poppaKenya, poppsub=poppsubKenya, stratifyByUrban=TRUE)

# adjust popMat to be target rather than general population density. First
# created target population frame (these numbers are based on IPUMS microcensus data)
mothersPerHouseholdUrb = 0.3497151
childrenPerMotherUrb = 1.295917
mothersPerHouseholdRur = 0.4787696
childrenPerMotherRur = 1.455222
targetPopPerStratumUrban = easpaKenya$HHUrb * mothersPerHouseholdUrb * childrenPerMotherUrb
targetPopPerStratumRural = easpaKenya$HHRur * mothersPerHouseholdRur * childrenPerMotherRur
easpaKenyaNeonatal = easpaKenya
easpaKenyaNeonatal$popUrb = targetPopPerStratumUrban
easpaKenyaNeonatal$popRur = targetPopPerStratumRural
easpaKenyaNeonatal$popTotal = easpaKenyaNeonatal$popUrb + easpaKenyaNeonatal$popRur
easpaKenyaNeonatal$pctUrb = 100 * easpaKenyaNeonatal$popUrb / easpaKenyaNeonatal$popTotal
easpaKenyaNeonatal$pctTotal = 
  100 * easpaKenyaNeonatal$popTotal / sum(easpaKenyaNeonatal$popTotal)

# generate the target population density by scaling the current population density grid 
# at the Admin1 x urban/rural level
popMatKenyaNeonatal = adjustPopMat(popMatKenya, easpaKenyaNeonatal)

# generate population table from the population density grid
poppsubNeonatal = poppRegionFromPopMat(popMatKenyaNeonatal, popMatKenyaNeonatal$subareas)
poppsubNeonatal = cbind(subarea=poppsubNeonatal$region, 
  area=admin2ToAdmin1Kenya(poppsubNeonatal$region), poppsubNeonatal[,-1])
  print(head(poppsubNeonatal))
}
}
\author{
John Paige
}
