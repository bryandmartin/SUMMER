% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fitspace.R
\name{smoothSurvey}
\alias{smoothSurvey}
\alias{fitGeneric}
\title{Fit space-time smoothing models for a generic outcome from complex surveys.}
\usage{
smoothSurvey(
  data,
  geo = NULL,
  Amat = NULL,
  X = NULL,
  responseType = c("binary", "gaussian")[1],
  responseVar,
  strataVar = "strata",
  weightVar = "weights",
  regionVar = "region",
  clusterVar = "~v001+v002",
  pc.u = 1,
  pc.alpha = 0.01,
  pc.u.phi = 0.5,
  pc.alpha.phi = 2/3,
  CI = 0.95,
  formula = NULL,
  timeVar = NULL,
  time.model = c("rw1", "rw2")[1],
  type.st = 1,
  direct.est = NULL,
  direct.est.var = NULL,
  is.unit.level = FALSE,
  is.agg = FALSE,
  strataVar.within = NULL,
  totalVar = NULL,
  weight.strata = NULL,
  nsim = 1000,
  ...
)

fitGeneric(
  data,
  geo = NULL,
  Amat = NULL,
  X = NULL,
  responseType = c("binary", "gaussian")[1],
  responseVar,
  strataVar = "strata",
  weightVar = "weights",
  regionVar = "region",
  clusterVar = "~v001+v002",
  pc.u = 1,
  pc.alpha = 0.01,
  pc.u.phi = 0.5,
  pc.alpha.phi = 2/3,
  CI = 0.95,
  formula = NULL,
  timeVar = NULL,
  time.model = c("rw1", "rw2")[1],
  type.st = 1,
  direct.est = NULL,
  direct.est.var = NULL,
  is.unit.level = FALSE,
  is.agg = FALSE,
  strataVar.within = NULL,
  totalVar = NULL,
  weight.strata = NULL,
  nsim = 1000,
  ...
)
}
\arguments{
\item{data}{The input data frame. The input data  with column of the response variable (\code{responseVar}), region ID (\code{regionVar}), stratification within region (\code{strataVar}), and cluster ID (\code{clusterVar}).
\itemize{ 
\item For area-level model, the data frame  consist of survey observations and corresponding survey weights (\code{weightVar}). 
\item For unit-level model, the data frame can be either the same as in the area-level model, or aggregated data specified by \code{is.agg = TRUE}. The aggregated data format should have the response variable as counts by cluster (for binary responses), or means by cluster (for continuous response).  
}}

\item{geo}{Deprecated argument from early versions.}

\item{Amat}{Adjacency matrix for the regions. If set to NULL, the IID spatial effect will be used.}

\item{X}{Areal covariates data frame. One of the column name needs to match the \code{regionVar} specified in the function call, in order to be linked to the data input. Currently only supporting static region-level covariates.}

\item{responseType}{Type of the response variable, currently supports 'binary' (default with logit link function) or 'gaussian'.}

\item{responseVar}{the response variable}

\item{strataVar}{the strata variable used in the area-level model.}

\item{weightVar}{the weights variable}

\item{regionVar}{Variable name for region.}

\item{clusterVar}{Variable name for cluster. For area-level model, this should be a formula for cluster in survey design object, e.g., '~clusterID + householdID'. For unit-level model, this should be the variable name for cluster unit.}

\item{pc.u}{hyperparameter U for the PC prior on precisions.}

\item{pc.alpha}{hyperparameter alpha for the PC prior on precisions.}

\item{pc.u.phi}{hyperparameter U for the PC prior on the mixture probability phi in BYM2 model.}

\item{pc.alpha.phi}{hyperparameter alpha for the PC prior on the mixture probability phi in BYM2 model.}

\item{CI}{the desired posterior credible interval to calculate}

\item{formula}{a string of user-specified random effects model to be used in the INLA call}

\item{timeVar}{The variable indicating time period. If set to NULL then the temporal model and space-time interaction model are ignored.}

\item{time.model}{the model for temporal trends and interactions. It can be either "rw1" or "rw2".}

\item{type.st}{can take values 0 (no interaction), or 1 to 4, corresponding to the type I to IV space-time interaction.}

\item{direct.est}{data frame of direct estimates, with column names of response and region specified by \code{responseVar}, \code{regionVar}, and \code{timeVar}.  When \code{direct.est} is specified, it overwrites the \code{data} input.}

\item{direct.est.var}{the column name corresponding to the variance of direct estimates.}

\item{is.unit.level}{logical indicator of whether unit-level model is fitted instead of area-level model.}

\item{is.agg}{logical indicator of whether the input is at the unit-level or aggregated by cluster. Only used for unit-level model.}

\item{strataVar.within}{the variable specifying within region stratification variable. This is only used for the unit-level model.}

\item{totalVar}{the variable specifying total observations in \code{counts}. This is only used for the unit-level model when \code{counts} is specified.}

\item{weight.strata}{a data frame with one column corresponding to \code{regionVar}, and columns specifying proportion of each strata for each region. This argument specifies the weights for strata-specific estimates. This is only used for the unit-level model.}

\item{nsim}{number of posterior draws to take. This is only used for the unit-level model when \code{weight.strata} is provided.}

\item{...}{additional arguments passed to \code{svydesign} function.}
}
\value{
\item{HT}{Direct estimates}
\item{smooth}{Smoothed direct estimates}
\item{fit}{a fitted INLA object}
\item{CI}{input argument}
\item{Amat}{input argument}
\item{responseType}{input argument}
\item{formula}{INLA formula}
}
\description{
This function calculates the direct estimates by region and fit a simple spatial smoothing model to the direct estimates adjusting for survey design.
Normal or binary variables are currently supported. For binary variables, the logit transformation is performed on the direct estimates of probabilities, and a Gaussian additive model is fitted on the logit scale using INLA.
}
\details{
The function \code{smoothSurvey} replaces the previous function name \code{fitGeneric} (before version 1.0.0).
}
\examples{
\dontrun{
data(DemoData2)
data(DemoMap2)
fit0 <- smoothSurvey(data=DemoData2,  
Amat=DemoMap2$Amat, responseType="binary", 
responseVar="tobacco.use", strataVar="strata", 
weightVar="weights", regionVar="region", 
clusterVar = "~clustid+id", CI = 0.95)

# Example with region-level covariates
 Xmat <- aggregate(age~region, data = DemoData2, FUN = mean)
 fit1 <- smoothSurvey(data=DemoData2,  
  Amat=DemoMap2$Amat, responseType="binary", 
  X = Xmat,
  responseVar="tobacco.use", strataVar="strata", 
  weightVar="weights", regionVar="region", 
  clusterVar = "~clustid+id", CI = 0.95)

# Example with using only direct estimates as input instead of the full data
direct <- fit0$HT[, c("region", "HT.est", "HT.var")]
fit2 <- smoothSurvey(data=NULL, direct.est = direct, 
                    Amat=DemoMap2$Amat, regionVar="region",
                    responseVar="HT.est", direct.est.var = "HT.var", 
                    responseType = "binary")
# Check it is the same as fit0
plot(fit2$smooth$mean, fit0$smooth$mean)

# Example with using only direct estimates as input, 
#   and after transformation into a Gaussian smoothing model
# Notice: the output are on the same scale as the input 
#   and in this case, the logit estimates.    
direct.logit <- fit0$HT[, c("region", "HT.logit.est", "HT.logit.var")]
fit3 <- smoothSurvey(data=NULL, direct.est = direct.logit, 
               Amat=DemoMap2$Amat, regionVar="region",
               responseVar="HT.logit.est", direct.est.var = "HT.logit.var",
               responseType = "gaussian")
# Check it is the same as fit0
plot(fit3$smooth$mean, fit0$smooth$logit.mean)

# Example with non-spatial smoothing using IID random effects
fit4 <- smoothSurvey(data=DemoData2, responseType="binary", 
       responseVar="tobacco.use", strataVar="strata", 
       weightVar="weights", regionVar="region", 
       clusterVar = "~clustid+id", CI = 0.95)

# Using the formula argument, further customizations can be added to the 
#  model fitted. For example, we can fit the Fay-Harriot model with 
#  IID effect instead of the BYM2 random effect as follows.
#  The "region.struct" and "hyperpc1" are picked to match internal object 
#  names. Other object names can be inspected from the source of smoothSurvey.
fit5 <- smoothSurvey(data=DemoData2,  
       Amat=DemoMap2$Amat, responseType="binary", 
       formula = "f(region.struct, model = 'iid', hyper = hyperpc1)",
       pc.u = 1, pc.alpha = 0.01,
       responseVar="tobacco.use", strataVar="strata", 
       weightVar="weights", regionVar="region", 
       clusterVar = "~clustid+id", CI = 0.95)
# Check it is the same as fit4, notice the region order may be different
regions <- fit5$smooth$region
plot(fit4$smooth[match(regions, fit4$smooth$region),]$logit.mean, fit5$smooth$logit.mean)

# Unit-level model
# For unit-level models, we need to create stratification variable within regions
data <- DemoData2
data$urbanicity <- "rural"
data$urbanicity[grep("urban", data$strata)] <- "urban"
fit6 <- smoothSurvey(data=data, 
  Amat=DemoMap2$Amat, responseType="binary", 
  X = Xmat, is.unit = TRUE,
  responseVar="tobacco.use", strataVar.within = "urbanicity", 
  regionVar="region", clusterVar = "clustid", CI = 0.95)

# Unit-level model using aggregated counts
# We may use aggregated unit-level information as input as well
data.agg <- aggregate(tobacco.use~region + urbanicity + clustid, 
                      data = data, FUN = sum)
data.agg.total <- aggregate(tobacco.use~region + urbanicity + clustid, 
                      data = data, FUN = length)
colnames(data.agg.total)[4] <- "total"
data.agg <- merge(data.agg, data.agg.total)
head(data.agg)
fit7 <- smoothSurvey(data=data.agg, 
  Amat=DemoMap2$Amat, responseType="binary", 
  X = Xmat, is.unit = TRUE, is.agg = TRUE,
  responseVar = "tobacco.use", strataVar.within = "urbanicity", 
  totalVar = "total", regionVar="region", clusterVar = "clustid", CI = 0.95)

# Check it is the same as fit6
plot(fit6$smooth$mean, fit7$smooth$mean)  

# Continuous outcome using Gaussian smoothing model: area-level model
fit8 <- smoothSurvey(data=DemoData2, Amat=DemoMap2$Amat, 
       responseType="gaussian", responseVar="age", strataVar="strata", 
       weightVar="weights", regionVar="region", 
         pc.u.phi = 0.5, pc.alpha.phi = 0.5,
       clusterVar = "~clustid+id", CI = 0.95)

# Continuous outcome using Gaussian smoothing model: 
#    unit-level model without stratification
fit9 <- smoothSurvey(data=data, 
  Amat=DemoMap2$Amat, responseType="gaussian", is.unit = TRUE,
  responseVar="age", strataVar.within = NULL,
  pc.u.phi = 0.5, pc.alpha.phi = 0.5,
  regionVar="region", clusterVar = "clustid", CI = 0.95)

# Compare area and unit level estimates (not supposed to be equal)
plot(fit8$smooth$mean, fit9$smooth$mean)  
abline(c(0, 1))

# Continuous outcome using Gaussian smoothing model: 
#    unit-level model with stratification
fit10 <- smoothSurvey(data=data, 
  Amat=DemoMap2$Amat, responseType="gaussian", is.unit = TRUE,
  responseVar="age", strataVar.within = "urbanicity",
  pc.u.phi = 0.5, pc.alpha.phi = 0.5,
  regionVar="region", clusterVar = "clustid", CI = 0.95)  


# Continuous outcome using Gaussian smoothing model: 
#     unit-level model using aggregated means
data.mean <- aggregate(age~region + urbanicity + clustid, 
                      data = data, FUN = mean)
fit11 <- smoothSurvey(data=data.mean, 
  Amat=DemoMap2$Amat, responseType="gaussian", is.unit = TRUE, 
  is.agg = TRUE, responseVar="age", strataVar.within = "urbanicity", 
  regionVar="region", clusterVar = "clustid", CI = 0.95)

# Check result is the same as fit10. Notice the region order may be different
compare <- fit10$smooth
compare <- merge(compare, fit11$smooth, by = c("region", "strata")) 
plot(compare$mean.x, compare$mean.y)  

# Notice the usual output is now stratified within each region
# The aggregated estimates require strata proportions for each region
# For illustration, we set strata population proportions below
prop <- data.frame(region = unique(data$region), 
                            urban = 0.3, 
                            rural = 0.7)
fit10.new <- smoothSurvey(data=data, 
  Amat=DemoMap2$Amat, responseType="gaussian", is.unit = TRUE,
  responseVar="age", strataVar.within = "urbanicity",
  pc.u.phi = 0.5, pc.alpha.phi = 0.5,
  regionVar="region", clusterVar = "clustid", CI = 0.95,
  weight.strata = prop)  

# aggregated outcome
head(fit10.new$smooth.overall)

# Compare aggregated outcome with direct aggregating posterior means. 
# There are small differences due to only 1000 posterior draws are taken.
# Set nsim to 1e5 to reduce Monta Carlo errors. 
est.urb <- subset(fit10$smooth, strata == "urban")
est.rural <- subset(fit10$smooth, strata == "rural")
est.mean.post <- est.urb$mean * 0.3 + est.rural$mean * 0.7
plot(fit10.new$smooth.overall$mean, est.mean.post)

}
}
\seealso{
\code{\link{getDirectList}}, \code{\link{smoothDirect}}
}
\author{
Zehang Richard Li
}
