% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simPop.R
\name{simPop}
\alias{simPop}
\alias{simPopSPDE}
\alias{simPopPixel}
\title{Simulate populations and areal prevalences}
\usage{
simPopSPDE(
  nsim = 1,
  easpa,
  popMat,
  targetPopMat,
  poppsub,
  spdeMesh,
  margVar = 0.243,
  sigmaEpsilon = sqrt(0.463),
  gamma = 0.009,
  effRange = 406.51,
  beta0 = -3.922,
  seed = NULL,
  inla.seed = -1L,
  nHHSampled = 25,
  stratifyByUrban = TRUE,
  subareaLevel = TRUE,
  doFineScaleRisk = FALSE,
  min1PerSubarea = TRUE
)

simPopPixel(
  uDraws,
  sigmaEpsilonDraws,
  easpa,
  popMat,
  targetPopMat,
  stratifyByUrban = TRUE,
  validationPixelI = NULL,
  validationClusterI = NULL,
  clustersPerPixel = NULL,
  doFineScaleRisk = FALSE,
  poppsub = NULL,
  subareaLevel = FALSE,
  min1PerSubarea = TRUE,
  returnEAinfo = FALSE,
  epsc = NULL
)
}
\arguments{
\item{nsim}{number of simulations}

\item{easpa}{data.frame of enumeration area, households, and target population per area stratified by urban/rural with variables:
\describe{
  \item{area}{name of area}
  \item{EAUrb}{number of urban enumeration areas in the area}
  \item{EARur}{number of rural enumeration areas in the area}
  \item{EATotal}{total number of enumeration areas in the area}
  \item{HHUrb}{number of urban households in the area}
  \item{HHRur}{number of rural households in the area}
  \item{HHTotal}{total number of households in the area}
  \item{popUrb}{total urban (target) population of area}
  \item{popRur}{total rural (target) population of area}
  \item{popTotal}{total (general) population of area}
}}

\item{popMat}{pixellated grid data frame with variables `lon`, `lat`, `pop`, `area`, `subareas` (if subareaLevel is TRUE), `urban` (if stratifyByUrban is TRUE), `east`, and `north`}

\item{targetPopMat}{same as popMat, but `pop` variable gives target rather than general population}

\item{poppsub}{data.frame of population per subarea separated by 
urban/rural using for population density grid normalization or urbanicity 
classification. Often based on extra fine scale population density grid. Has variables:}

\item{spdeMesh}{triangular mesh for the SPDE}

\item{margVar}{marginal variance of the spatial process, excluding cluster effects. 
If 0, no spatial component is included}

\item{sigmaEpsilon}{standard deviation on the logit scale for iid Gaussian EA level random effects in the risk model}

\item{gamma}{effect of urban on logit scale for logit model for risk}

\item{effRange}{effective spatial range for the SPDE model}

\item{beta0}{intercept of logit model for risk}

\item{seed}{random number generator seed}

\item{inla.seed}{seed input to inla.qsample. 0L sets seed intelligently, 
> 0 sets a specific seed, < 0 keeps existing RNG}

\item{nHHSampled}{number of households sampled per enumeration area. Default is 25 to match DHS surveys}

\item{stratifyByUrban}{whether or not to stratify simulations by urban/rural classification}

\item{subareaLevel}{whether or not to aggregate the population by subarea}

\item{doFineScaleRisk}{whether or not to calculate the fine scale risk at each aggregation level in addition to the prevalence}

\item{min1PerSubarea}{if TRUE, ensures there is at least 1 EA per subarea. If subareas are particularly unlikely to 
have enumeration areas since they have a very low proportion of the population in an area, then setting this to TRUE may be 
computationally intensive.}

\item{uDraws}{nPixels x nsim dimension matrix of draws from the spatial risk field on logit scale}

\item{sigmaEpsilonDraws}{nsim length vector of draws of cluster effect logit scale SD (joint draws with uDraws)}

\item{validationPixelI}{CURRENTLY FOR TESTING PURPOSES ONLY a set of indices of pixels for which we want to simulate populations (used for pixel level validation)}

\item{validationClusterI}{CURRENTLY FOR TESTING PURPOSES ONLY a set of indices of cluster for which we want to simulate populations (used for cluster level validation)}

\item{clustersPerPixel}{CURRENTLY FOR TESTING PURPOSES ONLY Used for pixel level validation. Fixes the number of EAs per pixel.}

\item{returnEAinfo}{if TRUE, returns information on every individual EA (BAU) for each simulated population}

\item{epsc}{nEAs x nsim matrix of simulated EA (BAU) level iid effects representing fine scale variation in 
      risk. If NULL, they are simulated as iid Gaussian on a logit scale with 
      SD given by sigmaEpsilonDraws
list(pixelPop=outPixelLevel, subareaPop=outSubareaLevel, areaPop=outAreaLevel, uDraws=uDraws)}
}
\value{
The simulated population aggregated to the enumeration area, 
pixel, subarea (generally Admin2), and area (generally Admin1) levels. Output includes:
\item{pixelPop}{A list of pixel level population aggregates}
\item{subareaPop}{A list of `subarea` level population aggregates}
\item{areaPop}{A list of `area` level population aggregates}
Each of these contains population numerator and denominator as well as prevalence and risk 
information aggregated to the appropriate level.
}
\description{
Given a spatial risk model, simulate populations and population prevalences at the 
enumeration area level (represented as points), and aggregate to the pixel and 
administrative areal level.
}
\details{
For population simulation and aggregation, we consider two models: the 
fine scale risk and the fine scale prevalence model. Both will be described in detail 
in a paper in preparation. In both models, enumeration areas (EAs) are simulated as 
point locations using an inhomogeneous Poisson process, with rate proportional to 
population density. EAs and populations are dispersed conditional on the (possibly 
approximately) known number of EAs, households, and target population at a particular 
areal level (these we call `areas`) using multilevel multinomial sampling, first 
sampling the EAs, then distributing households among the EAs, then the target population 
among the households. Any areal level below the `areas` we call `subareas`. For instance, 
the `areas` might be Admin1 if that is the smallest level at which the number of EAs, 
households, and people is known, and the `subareas` might be Admin2. The multilevel 
multinomial sampling may be stratified by urban/rural within the areas if the number of 
EAs, households, and people is also approximately known at that level.

Within each EA we assume a fixed probability of an event occurring, which is the `risk`. 
The `prevalence` is the empirical proportion of events within that EA. We assume EA 
level logit scale iid N(0, sigmaEpsilon^2) random effects in the risk model. When averaged 
with equal weights over all EAs in an areal unit, this forms the fine scale risk. When 
instead the population numerators and denominators are aggregated, and are used to 
calculate the empirical proportion of events occurring in an areal unit, the resulting 
quantity is the fine scale prevalence in that areal unit.

Note that these functions can be used for either simulating populations for simulation 
studies, or for generating predictions accounting for uncertainty in EA locations 
and fine scale variation occuring at the EA level due to EA level iid random effects. 
Required, however, is a seperatelt fit EA level spatial risk model 
and information on the spatial population density and the population frame.
}
\section{Functions}{
\itemize{
\item \code{simPopSPDE}: Simulate populations and population prevalences given census frame and population density 
information. Uses SPDE model for generating spatial risk and can include iid cluster 
level effect.

\item \code{simPopPixel}: Simulate populations and population prevalences given census frame and population density 
information. Uses custom spatial logit risk function and can include iid cluster 
level effect.
}}

\examples{
\dontrun{
##### Now we make a model for the risk. We will use an SPDE model with these 
##### parameters for the linear predictor on the logist scale, which are chosen 
##### to be of practical interest:
beta0=-2.9 # intercept
gamma=-1 # urban effect
rho=(1/3)^2 # spatial variance
effRange = 400 # effective spatial range in km
sigmaEpsilon=sqrt(1/2.5) # cluster (nugget) effect standard deviation

# simulate the population! Note that this produces multiple dense nEA x nsim and nPixel x nsim 
# matrices. In the future sparse matrices will and chunk by chunk computations may be incorporated.
data(kenyaMaps)
data(kenyaPopulationData)
simPop = simPopSPDE(nsim=1, easpa=easpaKenyaNeonatal, 
                    popMat=popMatKenya, targetPopMat=popMatKenyaNeonatal, 
                    poppsub=poppsubKenya, spdeMesh=kenyaMesh, 
                    margVar=rho, sigmaEpsilonSq=sigmaEpsilon^2, 
                    gamma=gamma, effRange=effRange, beta0=beta0, 
                    seed=123, inla.seed=12, nHHSampled=25, 
                    stratifyByUrban=TRUE, subareaLevel=TRUE, 
                    doFineScaleRisk=TRUE, 
                    min1PerSubarea=TRUE)
                    
# plot EA level (aggregated to pixels by quilt.plot) simulated risk and prevalence
eaDat = simPop$pixelPop$eaDat[[1]]
require(fields)
quilt.plot(eaDat$lon, eaDat$lat, eaDat$Z) # population numerator
quilt.plot(eaDat$lon, eaDat$lat, eaDat$N) # population denominator
quilt.plot(eaDat$lon, eaDat$lat, eaDat$pFineScalePrevalence) # numerator/denominator
quilt.plot(eaDat$lon, eaDat$lat, eaDat$pFineScaleRisk)
quilt.plot(eaDat$lon, eaDat$lat, eaDat$pFineScaleRisk, zlim=c(0, .09))

# We can simulate the above population in a more general way 
# by first simulating from the SPDE model for risk, and then 
# inputting that risk to a more general population simulator:
set.seed(123)
pixelCoords = cbind(popMatKenya$east, popMatKenya$north)

SPDEArgs = list(coords=pixelCoords, nsim=1, margVar=rho, effRange=effRange, 
                mesh=kenyaMesh, inla.seed=12L)
simVals = do.call("simSPDE", SPDEArgs)

# add in intercept
simVals = simVals + beta0

# add in urban effect
simVals = sweep(simVals, 1, gamma*popMatKenya$urban, "+")

# simulate nugget/cluster effect
totalEAs = sum(easpaKenyaNeonatal$EATotal)
epsc = matrix(stats::rnorm(totalEAs, sd=sigmaEpsilon), ncol=1)

# transform back to original scale for the pixel level probabilities
probsNoNug = expit(simVals)

# simulate the enumeration areas
uDraws = simVals
sigmaEpsilonDraws = sigmaEpsilon

# simulate EA and pixel level populations given the risk 
# simulated by the SPDE model
pixelPop = simPopPixel(uDraws=uDraws, sigmaEpsilonDraws=sigmaEpsilonDraws, 
                       easpa=easpaKenyaNeonatal, 
                       popMat=popMatKenya, targetPopMat=popMatKenyaNeonatal, 
                       stratifyByUrban=TRUE, 
                       doFineScaleRisk=TRUE, poppsub=poppsubKenya, 
                       subareaLevel=TRUE, min1PerSubarea=TRUE, 
                       returnEAinfo=TRUE, epsc=epsc)
}
}
\references{
In preparation
}
\seealso{
\code{\link{simPopPixel}}, \code{\link{makeInterpPopMat}}, \code{\link{adjustPopMat}}, \code{\link{simSPDE}}.
}
\author{
John Paige
}
